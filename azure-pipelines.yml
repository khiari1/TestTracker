trigger:
- none

pool:
  name: Agent - TSI
  demands:
    - agent.name -equals TSI-SRV03

variables:
  CLIENT_APP_DIRECTORY: 'Presentations/TestTracker-ClientApp'
  SERVER_APP_PROJECT: 'Presentations/Tsi.Erp.TestTracker.Api/Tsi.Erp.TestTracker.Api.csproj'
  FRONTEND_ARTIFACT_PATH: '$(Build.SourcesDirectory)/Presentations/TestTracker-ClientApp/dist'
  BACKEND_ARTIFACT_PATH: '$(Build.ArtifactStagingDirectory)/backend'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.0.x'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(SERVER_APP_PROJECT)'

- task: SonarCloudPrepare@3
  inputs:
    SonarQube: 'Connexion-SonarCloud'
    organization: 'tsi-developpement'
    scannerMode: 'dotnet'
    projectKey: 'TestTracker'
    projectName: 'Tsi-Erp-TestTracker'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(SERVER_APP_PROJECT)'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/backend'

- task: SonarCloudAnalyze@3

- task: SonarCloudPublish@3
  inputs:
    pollingTimeoutSec: '300'

- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    npm install -g @angular/cli
  displayName: 'Install Angular CLI'

- script: |
    npm install
  workingDirectory: '$(CLIENT_APP_DIRECTORY)'
  displayName: 'Install npm packages'

- script: |
    ng build
  workingDirectory: '$(CLIENT_APP_DIRECTORY)'
  displayName: 'Build Angular App'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Frontend Artifact'
  inputs:
    pathToPublish: '$(FRONTEND_ARTIFACT_PATH)'
    artifactName: 'frontend'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Backend Artifact'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/backend'
    artifactName: 'backend'
    publishLocation: 'Container'
